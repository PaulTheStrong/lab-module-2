plugins {
    id "java"
    id "jacoco"
}

project.ext.set("spring_boot_version", "2.5.5")

dependencies {
    implementation project(":webapp")
    compileOnly("org.springframework.boot:spring-boot-devtools:$spring_boot_version")
}

repositories {
    mavenLocal()
    mavenCentral()
}


subprojects {
    apply plugin: "java"
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-web:$spring_boot_version")
        implementation("org.springframework.boot:spring-boot-starter-data-jpa:$spring_boot_version")
        implementation("org.springframework.boot:spring-boot-starter-jdbc:$spring_boot_version")
        implementation("org.springframework.boot:spring-boot-starter-validation:$spring_boot_version")
        implementation("org.springframework.boot:spring-boot-starter-hateoas:$spring_boot_version")
        implementation("org.springframework.boot:spring-boot-starter-security:$spring_boot_version")
        implementation("org.springframework.boot:spring-boot-configuration-processor:$spring_boot_version")
        implementation("com.auth0:java-jwt:3.18.2")
        implementation("org.threeten:threetenbp:1.5.1")

        compileOnly "org.projectlombok:lombok:1.18.20"
        annotationProcessor "org.projectlombok:lombok:1.18.20"

        testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_boot_version")
    }
    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport // report is always generated after tests run
    }
    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
    }
}

group = "com.epam.esm"
version = "1.0-SNAPSHOT"
description = "rest-basics Maven Webapp"
java.sourceCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
